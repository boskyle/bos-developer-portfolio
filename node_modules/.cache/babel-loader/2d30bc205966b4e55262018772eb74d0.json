{"ast":null,"code":"var _jsxFileName = \"/srv/http/boskyle.com/public_html/projects/bos-developer-portfolio/bos-developer-portfolio/src/components/Nav/EmailModal/EmailModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport { useForm } from 'react-hook-form';\nimport './email-modal.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmailModal = ({\n  isOpen,\n  setIsOpen\n}) => {\n  _s();\n\n  var _errors$message;\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [charCounter, setCount] = useState(0);\n  const [charCounterFlag, setFlag] = useState(false);\n\n  const EmailModalExit = () => {\n    setIsOpen(false);\n  };\n\n  const onSubmit = async fd => {\n    let sendEmailUrl = 'https://boskyle.me/php-endpoints/send-email.php';\n    console.log(fd);\n    await fetch(sendEmailUrl, {\n      method: 'POST',\n      headers: {\n        'accept': 'application/json',\n        'content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: fd.email,\n        subject: fd.subject,\n        message: fd.message\n      })\n    }).then(response => response.text()).then(response => {\n      console.log(response);\n      toast.success(\"I got your message, I'll reach out as soon as I can.\");\n      setCount(0);\n      setIsOpen(false);\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    if (charCounter > 200) {\n      setFlag(true);\n    } else setFlag(false);\n  }, [charCounter]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    className: \"container-email-form\",\n    overlayClassName: \"lg-overlay\",\n    ariaHideApp: false,\n    onRequestClose: EmailModalExit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"\",\n        children: \"send me an electronic message.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        onClick: EmailModalExit,\n        children: \"EXIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"email-form w-100 h-100 p-3\",\n        onSubmit: handleSubmit(onSubmit),\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-item d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"sender-email\",\n              children: \"Your Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              placeholder: \"johnsmith@gmail.com\",\n              name: \"email\",\n              type: \"email\",\n              \"aria-describedby\": \"emailInput\",\n              ref: register({\n                required: {\n                  value: true,\n                  message: \"Email required.\"\n                },\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                  message: \"Not a valid email address.\"\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"form-err\",\n              children: errors.email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"sender-email\",\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Inquiry..\",\n              name: \"subject\",\n              type: \"text\",\n              ref: register({\n                required: false\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-item d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"message \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: charCounterFlag ? \"message-exceeded\" : \"message-not-exceeded\",\n                children: charCounter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 65\n              }, this), \"/200\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 47\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control w-100 mt-1 h-50\",\n            placeholder: \"Hello World!\",\n            onChange: e => setCount(e.target.value.length),\n            name: \"message\",\n            type: \"text\",\n            ref: register({\n              required: {\n                value: true,\n                message: \"Message required.\"\n              },\n              maxLength: 200\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 9\n          }, this), errors.message && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"form-err\",\n            children: errors.message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"form-err\",\n            children: ((_errors$message = errors.message) === null || _errors$message === void 0 ? void 0 : _errors$message.type) === \"maxLength\" && \"Message too long..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"mt-5\",\n            children: \"SEND\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 11\n  }, this);\n};\n\n_s(EmailModal, \"g/LOVAxjgt/Mj/5NUFvixl4Seic=\", false, function () {\n  return [useForm];\n});\n\n_c = EmailModal;\nexport default EmailModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailModal\");","map":{"version":3,"sources":["/srv/http/boskyle.com/public_html/projects/bos-developer-portfolio/bos-developer-portfolio/src/components/Nav/EmailModal/EmailModal.js"],"names":["React","useState","useEffect","Modal","useForm","ToastContainer","toast","EmailModal","isOpen","setIsOpen","register","handleSubmit","errors","charCounter","setCount","charCounterFlag","setFlag","EmailModalExit","onSubmit","fd","sendEmailUrl","console","log","fetch","method","headers","body","JSON","stringify","email","subject","message","then","response","text","success","catch","err","required","value","pattern","e","target","length","maxLength","type"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport Modal from 'react-modal';\nimport {useForm} from 'react-hook-form';\n\nimport './email-modal.css';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst EmailModal = ({isOpen,setIsOpen}) => {\n\n\n    const {register, handleSubmit, errors} = useForm();\n    const [charCounter, setCount] = useState(0);\n    const [charCounterFlag,setFlag] = useState(false);\n  \n\n    const EmailModalExit= () => {\n        setIsOpen(false);\n    }\n\n    const onSubmit = async fd => {\n  \n        let sendEmailUrl = 'https://boskyle.me/php-endpoints/send-email.php';\n        console.log(fd);\n\n        await fetch (sendEmailUrl,{\n        method: 'POST',\n        headers: {\n            'accept': 'application/json',\n            'content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            email: fd.email,\n            subject: fd.subject,\n            message: fd.message\n        })\n     }).then(response => response.text())\n            .then(response => {\n                console.log(response);\n                    toast.success(\"I got your message, I'll reach out as soon as I can.\");\n                    setCount(0);\n                    setIsOpen(false);\n            })\n                .catch(err => console.log(err))\n\n     \n    }\n\n\n    useEffect(() => {\n        if (charCounter > 200) {\n            setFlag(true);\n        } else setFlag (false);\n       \n    },[charCounter])\n\n  \n\n\n   \n    return<Modal isOpen={isOpen} className=\"container-email-form\" overlayClassName=\"lg-overlay\" ariaHideApp={false} onRequestClose={EmailModalExit}> \n   \n    <div className=\"form-wrapper\">\n    \n    <h2 className=\"\">send me an electronic message.</h2>\n    <small onClick={EmailModalExit}>EXIT</small>\n\n    <form className=\"email-form w-100 h-100 p-3\" onSubmit={handleSubmit(onSubmit)} noValidate>\n        <div className=\"form-item d-flex flex-column\">\n            <div className=\"form-group\">\n            <label htmlFor=\"sender-email\">Your Email</label>\n            <input className=\"form-control\" placeholder=\"johnsmith@gmail.com\"\n            name=\"email\"\n            type=\"email\"\n            aria-describedby=\"emailInput\"\n            ref={register({\n                required: {\n                    value: true,\n                    message: \"Email required.\"\n                },\n                pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                    message: \"Not a valid email address.\",\n                }\n              })}\n            />\n            {errors.email && <span className=\"form-err\">{errors.email.message}</span>}   \n            </div>\n            <div className=\"form-group\">\n            <label htmlFor=\"sender-email\">Subject</label>\n            <input className=\"form-control\" placeholder=\"Inquiry..\"\n            name=\"subject\" \n            type=\"text\"\n            ref={register({\n                required: false\n            })}\n            \n            />\n            </div>\n          \n        </div>\n\n<div className=\"form-item d-flex flex-column\"><h4>message <span><span className={charCounterFlag ? \"message-exceeded\" : \"message-not-exceeded\"}>{charCounter}</span>/200</span></h4>\n        <textarea className=\"form-control w-100 mt-1 h-50\" placeholder=\"Hello World!\"\n        onChange={e => setCount(e.target.value.length)}\n        name=\"message\"\n        type=\"text\"\n        ref={register({\n            required: {\n                value: true,\n                message: \"Message required.\"\n            },\n          maxLength: 200\n        })}\n        />\n         {errors.message && <span className=\"form-err\">{errors.message.message}</span>}\n            <span className=\"form-err\">{errors.message?.type === \"maxLength\" && \"Message too long..\"}</span>\n          <button type=\"submit\" className=\"mt-5\">SEND</button>\n        </div>\n\n    </form>\n    </div>\n    \n    </Modal>\n}\n\nexport default EmailModal;"]},"metadata":{},"sourceType":"module"}